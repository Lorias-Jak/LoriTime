name: Build and Publish Wiki

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  setup-version:
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.version_context.outputs.VERSION }}
      VERSION_TYPE: ${{ steps.version_context.outputs.VERSION_TYPE }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup version context
        id: version_context
        uses: ./.github/actions/version
        with:
          ROOT_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and Verify
    runs-on: ubuntu-latest
    needs: setup-version

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'

      - name: Cache Maven dependencies and target folder
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            target
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-target-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-target-
            ${{ runner.os }}-maven-

      - name: Activate lf line ending check in editorconfig
        run: |
          find . -type f -name ".editorconfig" -exec sed -i "s~#end_of_line = ~end_of_line = ~g" {} \;

      - name: Set temporary version in all pom.xml files
        run: |
          find . -name 'pom.xml' -exec sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ needs.setup-version.outputs.VERSION }}<\/loritime.version>/" {} +

      - name: Verify temporary version in all pom.xml files
        run: |
          find . -name 'pom.xml' -exec grep '<loritime.version>' {} \; || exit 1

      - name: Build with updated version
        run: mvn verify

      - name: Restore original version in all pom.xml files
        run: |
          git checkout -- .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: LoriTimeArtifacts
          path: |
            **/target/*.jar
            !config/target/*.jar

  deploy:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: [ setup-version, build ]
    if: needs.setup-version.outputs.VERSION_TYPE == 'release'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: LoriTimeArtifacts

      - name: Set CHANGELOG.md version
        shell: bash --noprofile --norc -euo pipefail {0}
        run: |
          sed -i "s~## \[Unreleased\]~## \[${{ needs.setup-version.outputs.VERSION }}\]~g" ./CHANGELOG.md
          DATE="$(date +%Y-%m-%d)"
          sed -i "s~\${maven\.build\.timestamp}~$DATE~g" ./CHANGELOG.md

      - name: GH-Release
        uses: docker://antonyurchenko/git-release:v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: false
          PRE_RELEASE: false
          CHANGELOG_FILE: CHANGELOG.md
          RELEASE_NAME: "LoriTime-${{ needs.setup-version.outputs.VERSION }}"
        with:
          args: |
            **/target/LoriTimeBukkit.jar
            **/target/LoriTimeBungee.jar
            **/target/LoriTimeVelocity.jar

  #      - name: Modrinth Release
  #        uses: Kir-Antipov/mc-publish@v3.3
  #        with:
  #          modrinth-id: LoriTime
  #          modrinth-featured: true
  #          modrinth-unfeature-mode: subset
  #          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
  #
  #          files: "**/target/LoriTimeBukkit.jar"
  #          name: LoriTimeBukkit ${{ needs.setup-version.outputs.VERSION }}
  #          version: ${{ needs.setup-version.outputs.VERSION }}
  #          version-type: release
  #          changelog-file: CHANGELOG.md
  #          loaders: |
  #            "bukkit"
  #            "paper"
  #          game-versions: |
  #            >=1.19
  #          game-version-filter: 'releases'
  #          retry-attempts: 2
  #          retry-delay: 10000
  #          fail-mode: fail
  
  update-wiki:
    name: Update GitHub Wiki
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v4

      - name: Publish to Wiki
        uses: Andrew-Chen-Wang/github-wiki-action@v4
        with:
          strategy: 'init'
          token: ${{ github.token }}
          path: 'docs/'
          ignore: ''
