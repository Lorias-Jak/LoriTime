name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Reagiert auf Tag-Push-Events, die mit "v" beginnen
  pull_request:
    branches:
      - main

jobs:
  setup-version:
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.version_context.outputs.VERSION }}
      VERSION_TYPE: ${{ steps.version_context.outputs.VERSION_TYPE }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup version context
        id: version_context
        uses: ./.github/actions/version
        with:
          ROOT_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and Verify
    runs-on: ubuntu-latest
    needs: setup-version

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'

      - name: Cache target folder
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ github.run_number }}

      - name: Activate lf line ending check in editorconfig
        run: |
          find . -type f -name ".editorconfig" -exec sed -i "s~#end_of_line = ~end_of_line = ~g" {} \;

      - name: Debugging Version Output
        run: |
          echo "Debugging: VERSION is ${{ needs.setup-version.outputs.VERSION }}"
          echo "Debugging: VERSION_TYPE is ${{ needs.setup-version.outputs.VERSION_TYPE }}"

      - name: Set temporary version in all pom.xml files
        run: |
          find . -name 'pom.xml' -exec sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ needs.setup-version.outputs.VERSION }}<\/loritime.version>/" {} +

      - name: Verify temporary version in all pom.xml files
        run: |
          find . -name 'pom.xml' -exec grep '<loritime.version>' {} \; || exit 1

      - name: Build with updated version
        run: mvn verify

      - name: Restore original version in all pom.xml files
        run: |
          git checkout -- .

      - name: Upload Artifact
        if: ${{ needs.setup-version.outputs.VERSION_TYPE != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: LoriTimeArtifacts
          path: |
            **/target/*.jar
            !config/target/*.jar

  deploy:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: needs.setup-version.outputs.VERSION_TYPE == 'release'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Create release
        uses: docker://antonyurchenko/git-release:v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: false
          PRE_RELEASE: false
          CHANGELOG_FILE: CHANGELOG.md
          RELEASE_NAME: LoriTime ${{ needs.setup-version.outputs.VERSION }}
        with:
          args: |
            bukkit/target/LoriTimeBukkit.jar
            bungee/target/LoriTimeBungee.jar
            velocity/target/LoriTimeVelocity.jar
