name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Verify
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'

      - name: Cache target folder
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ github.run_number }}

      - name: Activate lf line ending check in editorconfig
        run: |
          find . -type f -name ".editorconfig" -exec sed -i "s~#end_of_line = ~end_of_line = ~g" {} \;

      - name: Build with Maven. Phase 'verify'
        run: mvn verify

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: LoriTime-Artifacts
          path: |
            **/target/*.jar
            !config/target/*.jar

  update-version:
    name: Update Version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on default branch

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Get current version
        id: get-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=loritime.version -q -DforceStdout)
          echo "CURRENT_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Current loritime version: $VERSION"

      - name: Increment version
        id: increment-version
        run: |
          CURRENT_VERSION=${{ env.CURRENT_VERSION }}
          if [[ "$CURRENT_VERSION" =~ -DEV-([0-9]+)$ ]]; then
            BUILD_NUMBER=${BASH_REMATCH[1]}
            NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
          else
            NEW_BUILD_NUMBER=1
          fi
          NEW_VERSION=$(echo $CURRENT_VERSION | sed -e "s/-DEV-[0-9]*/-DEV-${NEW_BUILD_NUMBER}/")
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "New loritime version: $NEW_VERSION"

      - name: Update version in pom.xml
        run: |
          NEW_VERSION=${{ env.NEW_VERSION }}
          sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${NEW_VERSION}<\/loritime.version>/" pom.xml

      - name: Commit and push updated version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pom.xml
          git commit -m "Update loritime version to ${NEW_VERSION}"
          git push
