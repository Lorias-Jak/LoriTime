name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Verify
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'

      - name: Cache target folder
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ github.run_number }}

      - name: Activate lf line ending check in editorconfig
        run: |
          find . -type f -name ".editorconfig" -exec sed -i "s~#end_of_line = ~end_of_line = ~g" {} \;

      - name: Prepare build variables
        id: prepare-variables
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=loritime.version -q -DforceStdout)
          echo "CURRENT_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Current loritime version: $VERSION"
          if [[ "$CURRENT_VERSION" == *-DEV-UNOFFICIAL ]]; then
            NEW_VERSION="${CURRENT_VERSION/-DEV-UNOFFICIAL/-DEV-1}"
          elif [[ "$CURRENT_VERSION" =~ -DEV-([0-9]+) ]]; then
            BUILD_NUMBER=${BASH_REMATCH[1]}
            NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
            NEW_VERSION="${CURRENT_VERSION/-DEV-$BUILD_NUMBER/-DEV-$NEW_BUILD_NUMBER}"
          else
            NEW_VERSION="${CURRENT_VERSION}-DEV-1"
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "NEW_BUILD_NUMBER=${NEW_BUILD_NUMBER}" >> $GITHUB_ENV
          echo "New loritime version: $NEW_VERSION"

      - name: Set temporary version
        run: |
          sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ env.NEW_VERSION }}<\/loritime.version>/" pom.xml

      - name: Build with updated version
        run: mvn verify

      - name: Restore original version
        run: |
          sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ env.CURRENT_VERSION }}<\/loritime.version>/" pom.xml

      - name: Upload Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ env.NEW_BUILD_NUMBER }}
          path: |
            **/target/*.jar
            !config/target/*.jar

  update-version:
    name: Update Version
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Prepare build variables
        id: prepare-variables
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=loritime.version -q -DforceStdout)
          echo "CURRENT_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Current loritime version: $VERSION"
          if [[ "$CURRENT_VERSION" == *-DEV-UNOFFICIAL ]]; then
            NEW_VERSION="${CURRENT_VERSION/-DEV-UNOFFICIAL/-DEV-1}"
          elif [[ "$CURRENT_VERSION" =~ -DEV-([0-9]+) ]]; then
            BUILD_NUMBER=${BASH_REMATCH[1]}
            NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
            NEW_VERSION="${CURRENT_VERSION/-DEV-$BUILD_NUMBER/-DEV-$NEW_BUILD_NUMBER}"
          else
            NEW_VERSION="${CURRENT_VERSION}-DEV-1"
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "New loritime version: $NEW_VERSION"

      - name: Set new version
        run: |
          sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ env.NEW_VERSION }}<\/loritime.version>/" pom.xml

      - name: Commit and push updated version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pom.xml
          git commit -m "Update loritime version to ${NEW_VERSION}"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
