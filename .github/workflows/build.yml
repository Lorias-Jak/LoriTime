name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup version context
        uses: ./.github/actions/version
        id: version_context
        with:
          ROOT_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and Verify
    runs-on: ubuntu-latest
    needs: setup-version

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'

      - name: Cache target folder
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ github.run_number }}

      - name: Activate lf line ending check in editorconfig
        run: |
          find . -type f -name ".editorconfig" -exec sed -i "s~#end_of_line = ~end_of_line = ~g" {} \;

      - name: Set temporary version in all pom.xml files
        run: |
          find . -name 'pom.xml' -exec sed -i "s/<loritime.version>.*<\/loritime.version>/<loritime.version>${{ needs.version_context.outputs.VERSION }}<\/loritime.version>/" {} +

      - name: Build with updated version
        run: mvn verify

      - name: Restore original version in all pom.xml files
        run: |
          git checkout -- .

      - name: Upload Artifact
        if: ${{ needs.version_context.outputs.VERSION_TYPE != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: LoriTimeArtifacts
          path: |
            **/target/*.jar
            !config/target/*.jar

  deploy:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: needs.version_context.outputs.VERSION_TYPE == 'release'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          echo "deb [arch=amd64] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list
          sudo apt-get update
          sudo apt-get install gh

      - name: Set up GitHub CLI
        uses: actions/setup-gh@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        run: |
          TAG_NAME="v${{ needs.version_context.outputs.VERSION }}"
          RELEASE_TITLE="LoriTime-${{ needs.version_context.outputs.VERSION }}"
          CHANGELOG=$(cat CHANGELOG.md)

          gh release create "$TAG_NAME" \
            --title "$RELEASE_TITLE" \
            --notes "$CHANGELOG"

      - name: Upload Release Assets
        run: |
          TAG_NAME="v${{ needs.version_context.outputs.VERSION }}"
          gh release upload "$TAG_NAME" bukkit/target/LoriTimeBukkit.jar bungee/target/LoriTimeBungee.jar velocity/target/LoriTimeVelocity.jar
